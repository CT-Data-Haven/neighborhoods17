{"version":3,"sources":["img/25th-logotype.jpg","App.js","components/Filters.jsx","components/utils.js","components/BarChart.jsx","components/Legend.jsx","components/MapContainer.jsx","components/VizStage.jsx","components/Viz.jsx","components/Profile.jsx","components/DataTable.jsx","components/Intro.jsx","components/Download.jsx","components/Footer.jsx","components/Errata.jsx","data/routes.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","topic","Filters","props","topics","_","meta","values","map","flattenDeep","d","i","uniqBy","value","key","text","displayTopic","indicators","indicator","displayIndicator","cities","id","title","react_default","a","createElement","className","Form","Group","widths","Select","name","options","city","onChange","scrolling","label","sort","b","cleanVal","fmt","format","colorNhood","nhood","scale","geoType","BarChart","axis","tickFormat","ticks","padding","lib","data","indicatorData","size","width","height","responsiveWidth","responsiveHeight","oAccessor","x","length","substring","trunc","rAccessor","type","projection","rExtent","undefined","margin","left","top","right","bottom","sortO","style","opacity","color","fill","colorscale","oPadding","oLabel","tooltipContent","tooltip","pieces","hoverAnnotation","customClickBehavior","handleBar","Legend","vx_legend_es","labelFormat","Overlay","LayersControl","cityStyle","fillColor","weight","pointerEvents","MapContainer","getStyle","feature","properties","_this","mapData","fillOpacity","onEachFeature","layer","on","onClick","addHilite","removeHilite","bindTooltip","val","concat","direction","offset","e","target","setStyle","geo","topojson","_this2","this","layers","shapes","shp","objects","mesh","town","merge","geometries","checked","LayerGroup","GeoJSON","interactive","Map","bounds","getBounds","zoomSnap","zoomDelta","scrollWheelZoom","TileLayer","url","attribution","subdomains","minZoom","maxZoom","ext","components_Legend","React","Component","ChartComponent","componentFromProp","chartHash","bar","VizHeader","_ref","year","Header","as","VizStage","VizStage_VizHeader","Object","assign","component","Viz","panes","menuItem","icon","content","render","Tab","Pane","components_VizStage","handleShape","mapColors","barColors","menu","secondary","pointing","Profile","rows","omit","topicMeta","Table","Row","Cell","textAlign","warning","attached","definition","compact","unstackable","Body","DataTable","header","isAscending","otherHeaders","toConsumableArray","HeaderCell","handleSort","sorted","sortCol","handleClick","active","v","j","align","fixed","selectable","sortable","celled","Intro","Message","href","Download","Footer","Segment","basic","List","bulleted","sources","Item","source","project","components_Download","Image","src","alt","Errata","routes","new_haven","require","bridgeport","hartford","stamford","palette","schemeGnBu","barscheme","metaLong","firstNeighborhood","initData","filter","first","fetchIndicators","toArray","reset","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleSelect","setState","state","_this$state","opts","update","objectSpread","defineProperty","_ref2","column","handleRowClick","handleTableSort","topicData","fetch","_this$state2","fetchData","_ref3","fetched","metaVals","find","flatMap","sortBy","byIndicator","keyBy","vals","brks","ckmeans","slice","scaleThreshold","domain","range","geos","scaleOrdinal","table","profile","toIndicator","toMap","makeMapScale","makeBarScale","indicatorMeta","role","Grid","container","stackable","components_Intro","Column","components_Filters","components_Viz","components_Profile","components_DataTable","reverse","components_Footer","components_Errata","Boolean","window","location","hostname","match","ReactDOM","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.69e0154c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/25th-logotype.98a5f80e.jpg\";","import React from 'react';\nimport { Grid, Header } from 'semantic-ui-react';\nimport { scaleThreshold, scaleOrdinal } from 'd3-scale';\nimport { schemeGnBu } from 'd3-scale-chromatic';\nimport { ckmeans } from 'simple-statistics';\nimport * as _ from 'lodash';\n\nimport Filters from './components/Filters';\nimport Viz from './components/Viz';\nimport Profile from './components/Profile';\nimport DataTable from './components/DataTable';\nimport Intro from './components/Intro';\nimport Footer from './components/Footer';\nimport Errata from './components/Errata';\n\nimport './App.css';\n\nimport cities from './data/routes.js';\nimport metaLong from './data/nhood_meta.json';\nimport initData from './data/nhood_acs_health_wide.json';\nimport sources from './data/sources.json';\n\nconst shapes = {\n  new_haven: require('./shapes/new_haven_topo.json'),\n  bridgeport: require('./shapes/bridgeport_topo.json'),\n  hartford: require('./shapes/hartford_topo.json'),\n  stamford: require('./shapes/stamford_topo.json')\n};\n\nconst nBrks = 5;\nconst palette = schemeGnBu[nBrks];\nconst barscheme = [ '#3fa0e0', '#8f8f8f', '#8f8f8f', '#8f8f8f' ];\n// const year = 2017;\n\nconst meta = _.groupBy(metaLong, 'topic');\n\n// FUNCTIONS\nconst firstNeighborhood = (city) => (\n  _.chain(initData[city][0].data)\n    .filter({ geoType: '1_neighborhood'})\n    .map('name')\n    .first()\n    .value()\n);\n\nconst fetchIndicators = (topic) => (\n  _.chain(meta[topic])\n    .toArray()\n    .filter({ type: 'map' })\n    .value()\n);\n\nconst firstIndicator = (topic) => (\n  fetchIndicators(topic)[0].indicator\n);\n\nconst reset = {\n  city: cities[0].id,\n  nhood: firstNeighborhood(cities[0].id),\n  topic: _.keys(meta)[0],\n  indicator: firstIndicator(_.keys(meta)[0])\n};\n\nexport default class App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      topicData: [],\n      fetch: [],\n      isAscending: true,\n      sortCol: 'name',\n      ...reset\n    };\n  }\n\n  componentDidMount() {\n    let { city, topic, indicator } = this.state;\n    let opts = { city, topic, indicator };\n    this.update({ ...opts });\n  }\n\n  update(opts) {\n    let fetch = this.fetchData(opts);\n\n    this.setState({\n      indicator: opts.indicator,\n      fetch,\n      // topicData\n    });\n  }\n\n  fetchData({ city, topic }) {\n    return _.find(initData[city], { topic: topic });\n  }\n\n  // takes fetch\n  toTopic(fetched, topic) {\n    let out = _.map(fetched, (d, i) => {\n        let metaVals = _.chain(meta[topic]).find({ indicator: d.indicator }).omit([ 'order', 'suborder' ]).value();\n        return ({ ...metaVals, ...d });\n      });\n    return out;\n  }\n\n  // takes fetch\n  toIndicator(fetched, indicator) {\n    return _.chain(fetched.data)\n      .flatMap((d, i) => ({\n        name: d.name,\n        geoType: d.geoType,\n        value: d[indicator]\n      }))\n      .sortBy('value')\n      .value();\n  }\n\n  // takes indicatorData\n  toMap(byIndicator) {\n    return _.chain(byIndicator)\n      .filter({ geoType: '1_neighborhood' })\n      .keyBy('name')\n      .value();\n  }\n\n\n  ///////// scales\n  makeMapScale(data) {\n    let vals = _.map(data, 'value').sort((a, b) => a - b);\n    if (!vals.length) {\n      return scaleThreshold().domain([0, 1]).range(['#ccc']);\n    } else {\n      let brks = ckmeans(vals, nBrks).map((d) => d[0]).slice(1);\n      return scaleThreshold()\n        .domain(brks)\n        .range(palette);\n    }\n  }\n\n  makeBarScale(data) {\n    let geos = _.map(data, 'geoType').sort();\n    return scaleOrdinal()\n      .domain(geos)\n      .range(barscheme);\n  }\n\n  ////////// event handlers\n  handleSelect = (e, { name, value }) => {\n    if (name === 'city') {\n      this.setState({\n        nhood: firstNeighborhood(value),\n        city: value\n      });\n    }\n    let indicator = name === 'topic' ? fetchIndicators(value)[0].indicator : this.state.indicator;\n    let { city, topic } = this.state;\n    let opts = { city, topic, indicator };\n\n    this.update({ ...opts, [name]: value });\n\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleShape = (e) => {\n    let name = e.target.feature.properties.name;\n    this.setState({\n      nhood: name\n    });\n  };\n\n  handleBar = ({ column }) => {\n    let name = column.name;\n    this.setState({\n      nhood: name\n    });\n  };\n\n  handleRowClick = (name) => {\n    this.setState({\n      nhood: name\n    });\n  };\n\n  handleTableSort = (column) => () => {\n    let isAscending = _.isNull(this.state.isAscending) ? true : !this.state.isAscending;\n    this.setState({\n      sortCol: column,\n      isAscending\n    });\n  };\n\n  render() {\n    let indicators = fetchIndicators(this.state.topic);\n    let displayIndicator = _.find(indicators, { indicator: this.state.indicator }).displayIndicator;\n    let topicMeta = meta[this.state.topic];\n    // all indicators\n    let table = _.chain(this.state.fetch.data)\n      .map((d, i) => _.omit(d, 'geoType', 'town'))\n      .sortBy(this.state.sortCol)\n      .value();\n    let profile = _.find(table, { name: this.state.nhood });\n    // one indicator\n    let indicatorData = this.toIndicator(this.state.fetch, this.state.indicator);\n    let mapData = this.toMap(indicatorData);\n\n    let mapColors = this.makeMapScale(mapData);\n    let barColors = this.makeBarScale(indicatorData);\n\n    // get format of current indicator\n    let indicatorMeta = _.find(topicMeta, { indicator: this.state.indicator });\n    let fmt = indicatorMeta.format;\n    let year = indicatorMeta.year;\n\n    return (\n      <div className=\"App\" role=\"main\">\n        <Grid container stackable>\n          <Grid.Row>\n            <Header as='h1'>Connecticut Neighborhood Profiles</Header>\n          </Grid.Row>\n          <Grid.Row>\n            <Intro />\n          </Grid.Row>\n\n          <Grid.Row>\n            <Grid.Column>\n              <Filters\n                topic={this.state.topic}\n                indicator={this.state.indicator}\n                city={this.state.city}\n                meta={meta}\n                indicators={indicators}\n                cities={cities}\n                onChange={this.handleSelect} />\n            </Grid.Column>\n          </Grid.Row>\n\n          <Grid.Row>\n            <Grid.Column width={10}>\n              <Viz\n                indicator={this.state.indicator}\n                displayIndicator={displayIndicator}\n                indicatorData={indicatorData}\n                mapData={mapData}\n                shapes={shapes}\n                city={this.state.city}\n                nhood={this.state.nhood}\n                mapColors={mapColors}\n                barColors={barColors}\n                handleShape={this.handleShape}\n                handleBar={this.handleBar}\n                fmt={fmt}\n                year={year} />\n            </Grid.Column>\n            <Grid.Column width={6}>\n              <Profile\n                data={profile}\n                topicMeta={_.keyBy(topicMeta, 'indicator')}\n                displayTopic={topicMeta[0].displayTopic}\n              />\n            </Grid.Column>\n          </Grid.Row>\n\n          <Grid.Row>\n            <Grid.Column>\n              <DataTable\n                data={this.state.isAscending ? table : table.reverse()}\n                meta={topicMeta}\n                nhood={this.state.nhood}\n                handleClick={this.handleRowClick}\n                handleSort={this.handleTableSort}\n                isAscending={this.state.isAscending}\n                sortCol={this.state.sortCol}\n              />\n            </Grid.Column>\n          </Grid.Row>\n\n          <Grid.Row>\n            <Footer\n              city={this.state.city}\n              data={initData[this.state.city]}\n              meta={meta}\n              topic={this.state.topic}\n              sources={sources}\n            />\n          </Grid.Row>\n          <Grid.Row>\n            <Errata />\n          </Grid.Row>\n        </Grid>\n\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Form } from 'semantic-ui-react';\nimport * as _ from 'lodash';\n\nimport '../styles/Filters.css';\n\nconst Filters = (props) => {\n  const topics = _.chain(props.meta)\n    .values()\n    .map(_.toArray)\n    .flattenDeep()\n    .map((d, i) => _.pick(d, [ 'topic', 'displayTopic' ]))\n    .uniqBy('topic')\n    .value()\n    .map((d) => ({\n      key: d.topic,\n      value: d.topic,\n      text: d.displayTopic\n    }));\n\n  const indicators = props.indicators.map((d, i) => ({\n    key: d.indicator,\n    value: d.indicator,\n    text: d.displayIndicator\n  }));\n\n  const cities = props.cities.map((d, i) => ({\n    key: d.id,\n    value: d.id,\n    text: d.title\n  }));\n\n  return (\n    <div className='Filters'>\n      <Form>\n        <Form.Group widths='equal'>\n          <Form.Select id='citySelect'\n            name='city'\n            options={cities}\n            value={props.city}\n            onChange={props.onChange}\n            scrolling={true}\n          label='Select your city' />\n          <Form.Select id='topicSelect'\n            name='topic'\n            options={topics}\n            value={props.topic}\n            onChange={props.onChange}\n            scrolling={true}\n          label='Topic' />\n          <Form.Select id='indicatorSelect'\n            name='indicator'\n            options={indicators}\n            value={props.indicator}\n            onChange={props.onChange}\n            scrolling={true}\n          label='Indicator'/>\n        </Form.Group>\n      </Form>\n    </div>\n  );\n};\n\nexport default Filters;\n","import { format } from 'd3-format';\nimport * as _ from 'lodash';\n\nconst percent = (d) => (\n  format('.0%')(d)\n);\n\nconst comma = (d) => (\n  format(',')(d)\n);\n\nconst sort = (a, b) => {\n  return 1;\n};\n\nconst trunc = (x) => {\n  const maxChar = 20;\n\n  if (x) {\n    return x.length > maxChar ? x.substring(0, maxChar) + '...' : x;\n  }\n\n};\n\n// const cleanVal = (d, fmt) => (\n//   d ? fmt(d) : 'N/A'\n// );\nconst cleanVal = (d, fmt) => {\n  if (_.isNull(d)) {\n    return 'N/A';\n  } else {\n    return fmt ? format(fmt)(d) : d;\n  }\n};\n\nexport { percent, comma, sort, trunc, cleanVal };\n","import React from 'react';\nimport { ResponsiveOrdinalFrame } from 'semiotic';\nimport { sort, trunc, cleanVal } from './utils.js';\n\nimport '../styles/BarChart.css';\n\nconst hilite = '#e350a8';\n\nconst tooltip = (d, fmt) => (\n  <div className='tooltip-content'>\n    <p><strong>{d.name}: </strong>{cleanVal(d.value, fmt)}</p>\n  </div>\n);\n\n// add hilite to color scale\nconst colorNhood = (d, nhood, scale) => (\n  d.name === nhood ? hilite : scale(d.geoType)\n);\n\nconst BarChart = (props) => {\n  let axis = {\n    tickFormat: (d) => cleanVal(d, props.fmt),\n    ticks: 6,\n    padding: 4\n  };\n  return (\n    <div className='BarChart'>\n      <ResponsiveOrdinalFrame\n        data={props.indicatorData}\n        size={[ props.width, props.height ]}\n        responsiveWidth={true}\n        responsiveHeight={false}\n        oAccessor={(d) => trunc(d.name)}\n        rAccessor={'value'}\n        type={'bar'}\n        projection={'horizontal'}\n        rExtent={[ 0, undefined ]}\n        margin={{ left: 120, top: 8, right: 20, bottom: 30 }}\n        axis={axis}\n        sortO={sort}\n        style={(d) => ({\n          opacity: 0.8,\n          color: null,\n          fill: colorNhood(d, props.nhood, props.colorscale)\n        })}\n        oPadding={6}\n        oLabel={true}\n        tooltipContent={(d) => tooltip(d.pieces[0], props.fmt)}\n        hoverAnnotation={true}\n        customClickBehavior={props.handleBar}\n      />\n    </div>\n  )\n};\n\n  export default BarChart;\n","import React from 'react';\nimport { LegendThreshold } from '@vx/legend';\nimport { cleanVal } from './utils.js';\n\nimport '../styles/Legend.css';\n\nconst Legend = (props) => {\n  return (\n    <div className='Legend'>\n      <LegendThreshold\n        scale={props.colorscale}\n        labelFormat={(label) => label ? cleanVal(label, props.format) : ''}\n      />\n    </div>\n  );\n};\n\nexport default Legend;\n","import React from 'react';\nimport * as topojson from 'topojson-client';\nimport { Map, TileLayer, GeoJSON, LayersControl, LayerGroup } from 'react-leaflet';\nimport * as _ from 'lodash';\nimport { cleanVal } from './utils.js';\nimport Legend from './Legend';\n\nimport '../styles/MapContainer.css';\n\nconst { Overlay } = LayersControl;\n\nconst cityStyle = {\n\tfillColor: 'transparent',\n\tcolor: '#333',\n\tweight: 1.5,\n\tpointerEvents: 'none'\n};\n\nexport default class MapContainer extends React.Component {\n\tgetBounds(geo) {\n    let b = topojson.bbox(geo);\n    return [[ b[1], b[0] ], [ b[3], b[2] ]];\n  };\n\n  getStyle = (feature) => {\n    let name = feature.properties.name;\n    let fillColor = this.props.mapData[name] ? this.props.colorscale(this.props.mapData[name].value) : '#ccc';\n    return {\n      fillColor,\n      color: '#555',\n      weight: 0.5,\n      opacity: 1,\n      fillOpacity: 0.75\n    };\n  };\n\n  onEachFeature = (feature, layer) => {\n    let name = feature.properties.name;\n    layer.on('click', this.props.onClick)\n      .on('mouseover', this.addHilite)\n      .on('mouseout', this.removeHilite);\n    layer.bindTooltip(() => {\n\t\t\tlet val = this.props.mapData[name] ? this.props.mapData[name].value : null;\n\t\t\treturn `${name}: ${cleanVal(val, this.props.fmt)}`;\n    }, { direction: 'top', offset: [0, -20], className: 'custom-tip' });\n  };\n\n  addHilite = (e) => {\n    e.target.setStyle({\n      fillOpacity: 0.95,\n      weight: 1\n    });\n  };\n\n  removeHilite = (e) => {\n    e.target.setStyle({\n      fillOpacity: 0.75,\n      weight: 0.5\n    });\n  };\n\n\trender() {\n\t\tlet layers = _.chain(this.props.shapes)\n\t\t\t.map((d, i) => {\n\t\t\t\tlet shp = topojson.feature(d, d.objects.city);\n\t\t\t\t// make mesh & merge to outline towns\n\t\t\t\tlet mesh = topojson.mesh(d, d.objects.city, (a, b) => a.properties.town !== b.properties.town);\n\t\t\t\tlet merge = topojson.merge(d, d.objects.city.geometries);\n\t\t\t\treturn (\n\t\t\t\t\t<Overlay\n\t\t\t\t\t\tname={i}\n\t\t\t\t\t\tkey={`maplayer-${i}`}\n\t\t\t\t\t\tchecked={this.props.city === i}>\n\t\t\t\t\t\t<LayerGroup>\n\t\t\t\t\t\t\t<GeoJSON\n\t\t\t\t\t\t\t\tdata={shp}\n\t\t\t\t\t\t\t\tkey={(feature) => feature.properties.name}\n\t\t\t\t\t\t\t\tonEachFeature={(feature, layer) => this.onEachFeature(feature, layer)}\n\t\t\t\t\t\t\t\tstyle={this.getStyle}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<GeoJSON\n\t\t\t\t\t\t\t\tdata={mesh}\n\t\t\t\t\t\t\t\tstyle={cityStyle}\n\t\t\t\t\t\t\t\tinteractive={false}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<GeoJSON\n\t\t\t\t\t\t\t\tdata={merge}\n\t\t\t\t\t\t\t\tstyle={cityStyle}\n\t\t\t\t\t\t\t\tinteractive={false}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</LayerGroup>\n\t\t\t\t\t</Overlay>\n\t\t\t\t);\n\t\t\t})\n\t\t\t.value();\n\n\t\treturn (\n\t\t\t<div className='MapContainer'>\n        <Map\n\t\t\t\t\tbounds={this.getBounds(this.props.shapes[this.props.city])}\n          zoomSnap={0.25}\n          zoomDelta={0.25}\n          scrollWheelZoom={false}>\n          <TileLayer\n  \t\t\t\t\turl=\"https://stamen-tiles-{s}.a.ssl.fastly.net/toner-background/{z}/{x}/{y}.{ext}\"\n  \t\t\t\t\tattribution='Map tiles by <a href=\"http://stamen.com\">Stamen Design</a>, <a href=\"http://creativecommons.org/licenses/by/3.0\">CC BY 3.0</a> &mdash; Map data &copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>'\n  \t\t\t\t\tsubdomains='abcd'\n  \t\t\t\t\tminZoom={11}\n  \t\t\t\t\tmaxZoom={15}\n  \t\t\t\t\text='png'\n  \t\t\t\t\topacity={0.4} />\n\t\t\t\t\t<LayersControl>{layers}</LayersControl>\n\t\t\t\t</Map>\n\n\t\t\t\t<Legend colorscale={this.props.colorscale} format={this.props.fmt} />\n      </div>\n\t\t);\n\t}\n};\n","import React from 'react';\nimport { Header } from 'semantic-ui-react';\nimport { componentFromProp } from 'recompose';\n\nimport BarChart from './BarChart';\nimport MapContainer from './MapContainer';\n\nimport '../styles/VizStage.css';\n\nconst ChartComponent = componentFromProp('component');\n\nconst chartHash = { bar: BarChart, map: MapContainer };\n\nconst VizHeader = ({ displayIndicator, year }) => (\n  <Header as='h2'>{displayIndicator} by neighborhood, {year}</Header>\n);\n\nconst VizStage = (props) => (\n    <div className=\"VizStage\">\n      <VizHeader {...props} />\n      <ChartComponent component={chartHash[props.type]} {...props} />\n    </div>\n);\n\nexport default VizStage;\n","import React from 'react';\nimport { Tab } from 'semantic-ui-react';\n\nimport VizStage from './VizStage';\n\nimport '../styles/Viz.css';\n\nconst width = 500;\nconst height = 420;\n\nconst Viz = (props) => {\n  const panes = [\n    {\n      menuItem: {\n        key: 'pane-map',\n        icon: 'globe',\n        content: 'Show map'\n      },\n      render: () => (\n        <Tab.Pane key='pane-map'>\n          <VizStage type='map'\n            {...props}\n            width={width}\n            height={height}\n            onClick={props.handleShape}\n            colorscale={props.mapColors}\n          />\n      </Tab.Pane>\n      )\n    }, {\n      menuItem: {\n        key: 'pane-bar',\n        icon: 'bar chart',\n        content: 'Show chart'\n      },\n      render: () => (\n        <Tab.Pane key='pane-bar'>\n          <VizStage type='bar'\n            {...props}\n            width={width}\n            height={height}\n            onClick={props.handleBar}\n            colorscale={props.barColors}\n          />\n      </Tab.Pane>\n      )\n    }\n  ];\n\n  return (\n    <div className='Viz'>\n      <Tab menu={{\n        secondary: true,\n        pointing: true,\n        color: 'purple'\n      }}\n      panes={panes} />\n    </div>\n  );\n};\n\nexport default Viz;\n","import React from 'react';\nimport { Header, Table } from 'semantic-ui-react';\nimport * as _ from 'lodash';\nimport { cleanVal } from './utils.js';\n\nimport '../styles/Profile.css';\n\nconst Profile = (props) => {\n  let rows, name;\n  if (props.data) {\n    name = props.data.name;\n    rows = _.chain(props.data)\n      .omit('name')\n      .map((d, i) => {\n        let meta = props.topicMeta[i];\n        let fmt = meta.format;\n        return (\n          <Table.Row key={`profile-${i}`}>\n            <Table.Cell textAlign='left'>{meta.displayIndicator}</Table.Cell>\n            <Table.Cell textAlign='right'>{cleanVal(d, fmt)}</Table.Cell>\n          </Table.Row>\n        );\n      })\n      .value();\n  } else {\n    name = null;\n    rows = (<Table.Row warning><Table.Cell>No data available</Table.Cell></Table.Row>);\n  }\n\n  return (\n    <div className='Profile'>\n      <Header as='h3' attached='top'>{props.displayTopic} - {name}</Header>\n      <Table definition attached compact unstackable size='small'>\n        <Table.Body>{ rows }</Table.Body>\n      </Table>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from 'react';\nimport { Table } from 'semantic-ui-react';\nimport * as _ from 'lodash';\nimport { cleanVal } from './utils.js';\n\nimport '../styles/DataTable.css';\n\nconst DataTable = (props) => {\n  let header, rows;\n  if (props.data) {\n    let direction = props.isAscending ? 'ascending' : 'descending';\n\n    // need to handle names differently since not in meta\n    let firstHeader = { indicator: 'name', displayIndicator: 'Name' };\n    let otherHeaders = props.meta.map((d, i) => _.pick(d, [ 'indicator', 'displayIndicator' ]));\n    header = [ firstHeader, ...otherHeaders ].map((d, i) => (\n      <Table.HeaderCell\n        key={`tableheader-${d.indicator}`}\n        onClick={props.handleSort(d.indicator)}\n        sorted={d.indicator === props.sortCol ? direction : null}\n      >\n        {d.displayIndicator}</Table.HeaderCell>\n      )\n    );\n\n    rows = props.data.map((d, i) => (\n      <Table.Row key={`tablerow-${d.name}`}\n        onClick={() => props.handleClick(d.name)}\n        active={props.nhood === d.name}\n        className={props.nhood === d.name ? 'hilite' : null}>\n        { _.map(d, (v, j) => {\n          let align = _.isNumber(v) ? 'right' : 'left';\n          let fmt = j === 'name' ? null : _.find(props.meta, { indicator: j }).format;\n          return (\n            <Table.Cell\n              key={`tablecell-${d.name}-${j}`}\n              textAlign={align}>{cleanVal(v, fmt)}</Table.Cell>\n          );\n        }) }\n      </Table.Row>\n    ));\n  } else {\n    header = null;\n    rows = null;\n  }\n\n  return (\n\t\t<div className='DataTable'>\n      <Table compact fixed unstackable selectable sortable celled size='small'>\n        <Table.Header>\n          <Table.Row>{header}</Table.Row>\n        </Table.Header>\n        <Table.Body>{rows}</Table.Body>\n      </Table>\n    </div>\n\t);\n};\n\nexport default DataTable;\n","import React from 'react';\nimport { Message } from 'semantic-ui-react';\n\nimport '../styles/Intro.css';\n\nconst text = 'Select a topic and indicator to view either a map or a chart. Clicking a neighborhood on the map, chart, or table will bring up detailed information on that neighborhood. See all neighborhoods in the table below.';\n\nconst Intro = () => (\n\t<div className='Intro'>\n\t\t<Message>\n\t\t\t<p>{text} For more information, visit DataHaven's <a href=\"http://www.ctdatahaven.org/communities\">Communities</a> page or <a href=\"http://www.ctdatahaven.org\">main website</a>.</p>\n\t\t</Message>\n\t</div>\n);\n\nexport default Intro;\n","import React from 'react';\n\nconst Download = (props) => {\n  return (\n    <p>\n      <strong>\n        <a href={`https://github.com/CT-Data-Haven/nhood_profile_data/blob/master/to_distribute/2017_${props.city}_profile_distr.csv`}>View this data</a>\n      </strong> or right-click ('Save as...')\n      <strong>\n        <a href={`https://raw.githubusercontent.com/CT-Data-Haven/nhood_profile_data/master/to_distribute/2017_${props.city}_profile_distr.csv`}> here </a>\n      </strong> to download\n    </p>\n  );\n};\n\nexport default Download;\n","import React from 'react';\nimport { Image, Segment, List } from 'semantic-ui-react';\nimport Download from './Download';\n\nimport src from '../img/25th-logotype.jpg';\n\nconst text = 'Source: DataHaven analysis (2018) of';\n// const sources = [\n//   'US Census Bureau. American Community Survey 2017 5-year estimates. 2018',\n//   'Centers for Disease Control and Prevention, National Center for Chronic Disease Prevention and Health Promotion, Division of Population Health. 500 Cities Project Data. 2018',\n//   'National Center for Health Statistics. U.S. Small-Area Life Expectancy Estimates Project (USALEEP): Life Expectancy Estimates File for Connecticut, 2010-2015. National Center for Health Statistics. 2018'\n// ]\n\nconst Footer = (props) => (\n  <div className='Footer'>\n    <Segment secondary basic>\n      <p>{text}</p>\n      <List bulleted>\n        {props.sources.map((d, i) => (\n          <List.Item key={`source-${i}`}>\n            <span>{d.source}</span> <a href={d.url}>{d.project}</a> <span>{d.year}</span>\n          </List.Item>\n        ))}\n      </List>\n      <Download {...props} />\n      <Image src={src} size='small' as='a' href='http://www.ctdatahaven.org' alt='DataHaven logo'/>\n    </Segment>\n  </div>\n);\n\nexport default Footer;\n","import React from 'react';\nimport { Message } from 'semantic-ui-react';\n\nconst title = 'Errata, 9/10/2019';\nconst text = 'Due to incorrect weighting, there were minor errors in values for some neighborhoods in the life expectancy, health outcomes, prevention, and healthy behaviors indicators. Incorrect values were nearly all within 1 percentage point of the correct value for rates, and less than a year for life expectancy. Data available to download has been corrected. Please contact DataHaven with any questions or concerns.';\n\nconst Errata = (props) => (\n  <div className='Footer'>\n    <Message warning>\n      <Message.Header>{title}</Message.Header>\n      <p>{text}</p>\n    </Message>\n  </div>\n);\n\nexport default Errata;\n","const routes = [\n  {\n    id: 'new_haven',\n    title: 'New Haven'\n  }, {\n    id: 'bridgeport',\n    title: 'Bridgeport'\n  }, {\n    id: 'hartford',\n    title: 'Hartford / West Hartford'\n  }, {\n    id: 'stamford',\n    title: 'Stamford'\n  }\n];\n\nexport default routes;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// import 'semantic-ui-css/semantic.min.css';\nimport 'semantic-ui/semantic.min.css';\nimport 'leaflet/dist/leaflet.css';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}